import{_ as d}from"./preload-helper.a4192956.js";import{b as o}from"./paths.4bdd7ec8.js";function f(a){return a?.length!==void 0?a:Array.from(a)}class n{_path;constructor(t){this._path=t}get webPath(){return o+this._path}get dirPath(){return"src/routes"+this._path}get rawPath(){return this._path}get importPath(){return"../entries/pages"+this._path.replace(/(\+)(.*?)(\.ts)$/gm,"_$2.ts.js")}}class h extends n{_children;key;pageData;constructor(t,r){super(t),this.key=r}getChild(t){return this._children||(this._children={}),this._children[t]||(this._children[t]=new h(`${this.rawPath}/${t}`,t)),this._children[t]}getChildren(){return Object.values(this._children||{})}getChildrenAtPath(t){let r=t.split("/").slice(1),e=this;for(let i of r){if(i.length<1)throw"bad getPathChildren; malformed.";if(!e._children)throw`bad getPathChildren; ${e.dirPath} has no children.`;if(!e._children[i])throw`bad getPathChildren; ${e.dirPath} does not have ${i}.`;e=e._children[i]}return e.getChildren()}}const c={"+page.ts":async(a,t)=>{const r=new n(`${t.rawPath}/${a.name}`).importPath;let e;try{e=await d(()=>import(r),[],import.meta.url)}catch(l){throw"bad auto-import: "+r+`

`+l}const i=e.load();t.pageData=i}};async function s(a){const t=(void 0)(a.dirPath,{withFileTypes:!0});for(const r of t)if(r.isFile()){let e=c[r.name];e&&await e(r,a)}else r.isDirectory()&&await s(a.getChild(r.name));return a}const g=await s(new h("",""));export{f as e,g as p};
