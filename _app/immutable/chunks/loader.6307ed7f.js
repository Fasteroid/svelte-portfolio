import{_ as d}from"./preload-helper.a4192956.js";import{b as o}from"./paths.8c21a0fd.js";function u(i){return i?.length!==void 0?i:Array.from(i)}class n{_path;constructor(t){this._path=t}get webPath(){return o+this._path}get dirPath(){return"src/routes"+this._path}get rawPath(){return this._path}get importPath(){return"../entries/pages"+this._path.replace(/(\+)(.*?)(\.ts)$/gm,"_$2.ts.js")}}class h extends n{children;key;pageData;constructor(t,a){super(t),this.key=a}getChild(t){return this.children||(this.children={}),this.children[t]||(this.children[t]=new h(`${this.rawPath}/${t}`,t)),this.children[t]}getPathChildren(t){let a=t.split("/").slice(1),e=this;for(let r of a){if(r.length<1)throw"bad getPathChildren; malformed.";if(!e.children)throw`bad getPathChildren; ${e.dirPath} has no children.`;if(!e.children[r])throw`bad getPathChildren; ${e.dirPath} does not have ${r}.`;e=e.children[r]}if(!e.children)throw`bad getPathChildren; ${e.dirPath} has no children.`;return Object.values(e.children)}}const c={"+page.ts":async(i,t)=>{const a=new n(`${t.rawPath}/${i.name}`).importPath;let e;try{e=await d(()=>import(a),[],import.meta.url)}catch(l){throw"bad auto-import: "+a+`

`+l}const r=e.load();t.pageData=r}};async function s(i){const t=(void 0)(i.dirPath,{withFileTypes:!0});for(const a of t)if(a.isFile()){let e=c[a.name];e&&await e(a,i)}else a.isDirectory()&&await s(i.getChild(a.name));return i}const P=await s(new h("",""));export{u as e,P as p};
